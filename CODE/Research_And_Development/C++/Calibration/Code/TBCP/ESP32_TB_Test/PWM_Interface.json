{
    "frameEnd": "",
    "frameParser": "/* \r\n * @brief Frame parsing function, you can modify this to suit your needs.\r\n * \r\n * By customizing this code, you can use a single JSON project file to \r\n * process different kinds of frames that are sent by the microcontroller \r\n * or any data source that is connected to Serial Studio. Frame parsing code\r\n * is specific to every JSON project that you create.\r\n *\r\n * @param frame      string with the latest received frame.\r\n * @param separator  data separator sequence defined by the JSON project.\r\n *\r\n * @note.            only data that is *inside* the data delimiters will\r\n *                   be processed by the frame parser.\r\n *\r\n * @note             you can safely declare global variables outside the\r\n *                   @c parse() function.\r\n */\r\nfunction parse(frame, separator) {\r\n    return frame.split(separator);\r\n}",
    "frameStart": "",
    "groups": [
        {
            "datasets": [
                {
                    "alarm": 100,
                    "fft": false,
                    "fftSamples": 1024,
                    "graph": true,
                    "index": 1,
                    "led": false,
                    "log": false,
                    "max": 100,
                    "min": 0,
                    "title": "Target_Pos",
                    "units": "%",
                    "value": "",
                    "widget": ""
                },
                {
                    "alarm": 100,
                    "fft": false,
                    "fftSamples": 1024,
                    "graph": true,
                    "index": 2,
                    "led": false,
                    "log": false,
                    "max": 100,
                    "min": 0,
                    "title": "Current_Pos",
                    "units": "%",
                    "value": "",
                    "widget": ""
                },
                {
                    "alarm": 100,
                    "fft": false,
                    "fftSamples": 1024,
                    "graph": true,
                    "index": 3,
                    "led": false,
                    "log": false,
                    "max": 100,
                    "min": 0,
                    "title": "PID Output",
                    "units": "%",
                    "value": "",
                    "widget": ""
                },
                {
                    "alarm": 100,
                    "fft": false,
                    "fftSamples": 1024,
                    "graph": true,
                    "index": 4,
                    "led": false,
                    "log": false,
                    "max": 100,
                    "min": 0,
                    "title": "Error",
                    "units": "%",
                    "value": "",
                    "widget": "gauge"
                }
            ],
            "title": "INFO",
            "widget": "multiplot"
        }
    ],
    "separator": "",
    "title": "PWM_Interface"
}
